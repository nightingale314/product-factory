# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: nightingale16
# "app" enables Serverless Framework Dashboard features and sharing them with other Services.
app: ai-product-hub
# "service" is the name of this project. This will also be added to your AWS resource names.
service: import-service

plugins:
  - serverless-offline
  - serverless-lift
  - serverless-dotenv-plugin

provider:
  name: aws
  runtime: nodejs20.x
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - "logs:CreateLogGroup"
            - "logs:CreateLogStream"
            - "logs:PutLogEvents"
            - "s3:GetObject"
            - "sqs:SendMessage"
            - "sqs:ReceiveMessage"
            - "sqs:DeleteMessage"
            - "sqs:GetQueueAttributes"
            - "lambda:InvokeFunction"
          Resource:
            - "arn:aws:s3:::ai-product-hub-product-import/*"

package:
  individually: true
  patterns:
    - "../../node_modules/.pnpm/@prisma+client@*/node_modules/.prisma/**/*"
    - "../../node_modules/.pnpm/@prisma+client@*/node_modules/@prisma/client/**/*"
    # - "!../../node_modules/.pnpm/@prisma+client@*/node_modules/@prisma/engines/**"
    # - "!../../node_modules/.pnpm/@prisma+client@*/node_modules/.prisma/client/libquery_engine-*"
    - "../../node_modules/.pnpm/@prisma+client@*/node_modules/.prisma/client/libquery_engine-linux-*"
    - "../../node_modules/.pnpm/@prisma+client@*/node_modules/.prisma/client/libquery_engine-rhel-*"

functions:
  testHandler:
    handler: testHandler.handler
  startImportTask:
    handler: startImportTask.handler
    environment:
      MAPPINGS_GENERATOR_QUEUE_URL: ${construct:mappings-generator-queue.queueUrl}
      IMPORTER_QUEUE_URL: ${construct:product-importer-queue.queueUrl}

constructs:
  mappings-generator-queue:
    type: queue
    batchSize: 1
    maxRetries: 1
    maxConcurrency: 10
    worker:
      handler: mappingsWorker.handler
  product-importer-queue:
    type: queue
    batchSize: 1
    maxRetries: 1
    maxConcurrency: 10
    worker:
      handler: importerWorker.handler
